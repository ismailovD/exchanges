@import url(fonts.css);

* {
    padding: 0;
    margin: 0;
    -webkit-box-sizing: border-box;
    box-sizing: border-box;
    list-style: none
}

:root {
    --blue: #473E9E;
    --light-blue: #3291E9;
    --light-blue-opacity: rgba(50, 145, 233, 0.15);
    --white: #fff;
    --black: #000;
    --purple: #918BC5;
    --dark-purple: #9473E9;
    --dark-purple-opacity: rgba(149, 115, 233, 0.15);
    --dark-purple-opacity-30: rgba(149, 115, 233, 0.3);
    --dark-purple-opacity-50: rgba(149, 115, 233, 0.5);
    --purple-opacity: rgba(145, 139, 197, 0.3);
    --red: #EE2654;
    --light-red: #E9555E;
    --red-opacity: rgba(238, 38, 84, 0.15);
    --yellow: #FAB011;
    --green: #229E3D;
    --green-opacity: rgba(34, 158, 61, 0.15);
    --orange: #EB8F22;
    --orange-opacity: rgba(235, 145, 34, 0.15);
    --f400-lato: "Lato-Regular";
    --f500-lato: "Lato-Medium";
    --f600-lato: "Lato-Semibold";
    --f700-lato: "Lato-Bold";
    --main-input-bg: #F2F1FF;
    --btn-shadow: 0 0 20px 5px rgba(0, 0, 0, 0.3);
    --btn-shadow2: 0 0 5px 1px rgba(0, 0, 0, 0.3);
    --bg-other-main: #F2F1FF;
    --reason-input-bg: #fff;
    --reason-input-border: #E7E5F4;
    --reason-input-circle: #DAD8EC;
    --loading-bg: #EDECFF;
    --border-bottom-tabs: #BCBFD8;
    --return-input-bg: #E4E3F7;
    --border-radius-big: 10px;
    --border-radius-middle: 6px;
    --border-radius-small: 3px
}

a,
a:hover {
    text-decoration: none
}

p,
ul {
    margin-bottom: 0
}

ol,
ul {
    padding-left: 0
}

body {
    min-width: 320px;
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex
}

.return__body {
    background: var(--bg-other-main);
    height: 100%
}

.return__content {
    padding-left: 60px;
    padding-right: 60px;
    padding-bottom: 65px;
    -webkit-box-flex: 1;
    -ms-flex-positive: 1;
    flex-grow: 1
}

.side-bar__btn {
    width: 100%;
    background: var(--main-input-bg);
    height: 35px;
    display: none;
    -webkit-box-pack: center;
    -ms-flex-pack: center;
    justify-content: center;
    -webkit-box-align: center;
    -ms-flex-align: center;
    align-items: center;
    position: absolute;
    top: 0;
    left: 0;
    cursor: pointer
}

.side-bar__btn-icon {
    width: 15px;
    height: 14px;
    fill: var(--purple)
}

.side-bar__img {
    width: 100%;
    display: none
}

.side-bar {
    width: 275px;
    min-width: 60px;
    min-height: 100vh;
    position: -webkit-sticky;
    position: sticky;
    top: 0;
    left: 0;
    -webkit-transition: .2s;
    -o-transition: .2s;
    transition: .2s;
    padding: 30px 40px 40px 30px;
    background: var(--white);
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -ms-flex-wrap: wrap;
    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
    -ms-flex-direction: column;
    flex-direction: column;
    -webkit-box-pack: justify;
    -ms-flex-pack: justify;
    justify-content: space-between;
    flex-wrap: wrap
}

.side-bar__logo {
    margin-bottom: 31px;
    display: inline-block;
    -webkit-box-pack: center;
    -ms-flex-pack: center;
    justify-content: center;
    height: -webkit-fit-content;
    height: -moz-fit-content;
    height: fit-content;
    width: 100%
}

.side-bar__pic {
    width: 100%;
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-pack: center;
    -ms-flex-pack: center;
    justify-content: center
}

.side-bar__logo-img {
    -o-object-fit: contain;
    object-fit: contain
}

.side-bar__center {
    width: 100%
}

.side-bar__list {
    border-bottom: 1px solid var(--dark-purple-opacity-30);
    padding-bottom: 28px;
    margin-bottom: 24px
}

.side-bar__item {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-pack: justify;
    -ms-flex-pack: justify;
    justify-content: space-between;
    position: relative;
    height: 24px
}

.side-bar__item:not(:last-child) {
    margin-bottom: 22px
}

.side-bar__settings::before,
.side-bar__help::before,
.side-bar__item::before {
    content: '';
    height: 30px;
    width: 6px;
    border-radius: 5px;
    background: var(--blue);
    position: absolute;
    top: 50%;
    left: -18px;
    -webkit-transform: translateY(-50%);
    -ms-transform: translateY(-50%);
    transform: translateY(-50%);
    opacity: 0
}

.side-bar__link {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-align: center;
    -ms-flex-align: center;
    align-items: center;
    font-family: var(--f600-lato);
    font-weight: 600;
    font-size: 16px;
    line-height: 20px;
    color: var(--purple)
}

.side-bar__link:hover,
.side-bar__item:hover .side-bar__link {
    color: var(--blue)
}

.side-bar__item:hover .side-bar__icon {
    stroke: var(--blue)
}

.side-bar__icon {
    width: 20px;
    height: 20px;
    display: inline-block;
    fill: none;
    stroke: var(--purple);
    margin-right: 20px
}

.side-bar__count {
    width: 24px;
    height: 24px;
    border-radius: 50%;
    background: var(--blue);
    color: var(--white);
    font-family: var(--f600-lato);
    font-weight: 600;
    font-size: 12px;
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-align: center;
    -ms-flex-align: center;
    align-items: center;
    -webkit-box-pack: center;
    -ms-flex-pack: center;
    justify-content: center
}

.side-bar__count::after {
    content: '';
    display: none;
    position: absolute;
    width: 6px;
    height: 6px;
    top: -3px;
    right: 0;
    border-radius: 50%;
    background: var(--purple)
}

.side-bar__count[data-count="0"] {
    display: none
}

.side-bar__dropdown {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-align: center;
    -ms-flex-align: center;
    align-items: center;
    -ms-flex-wrap: wrap;
    flex-wrap: wrap;
    font-family: var(--f600-lato);
    font-weight: 600;
    font-size: 16px;
    line-height: 20px;
    color: var(--purple)
}

.side-bar__settings {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    position: relative;
    cursor: pointer
}

.side-bar__dropdown {
    position: relative;
    -webkit-box-flex: 1;
    -ms-flex-positive: 1;
    flex-grow: 1
}

.side-bar__settings:hover .side-bar__icon {
    stroke: var(--blue)
}

.side-bar__settings:hover .side-bar__dropdown-btn {
    color: var(--blue)
}

.side-bar__settings:hover .side-bar__dropdown-icon {
    stroke: var(--blue)
}

.side-bar__dropdown-btn {
    width: 100%;
    text-align: left;
    font-family: var(--f600-lato);
    font-weight: 600;
    font-size: 16px;
    line-height: 20px;
    color: var(--purple);
    cursor: pointer
}

.side-bar__dropdown-icon {
    position: absolute;
    top: 50%;
    right: 10px;
    width: 9px;
    height: 5px;
    stroke: var(--purple);
    margin-left: 15px;
    z-index: 0
}

.side-bar__dropdown-list {
    position: absolute;
    top: 1.5em;
    left: 0;
    width: 100%;
    max-height: 0;
    padding-top: 5px;
    overflow: hidden;
    -webkit-transition: .3s;
    -o-transition: .3s;
    transition: .3s
}

.side-bar__dropdown.active .side-bar__dropdown-icon {
    -webkit-transform: rotate(180deg);
    -ms-transform: rotate(180deg);
    transform: rotate(180deg)
}

.side-bar__dropdown.active .side-bar__dropdown-list {
    max-height: 100px;
    border-top: 1px solid var(--dark-purple-opacity-30)
}

.side-bar__help {
    -ms-flex-item-align: end;
    align-self: flex-end;
    width: 100%;
    position: relative
}

.side-bar__help-icon {
    width: 22px;
    height: 22px;
    fill: var(--purple);
    margin-right: 18px
}

.side-bar__link:hover .side-bar__help-icon {
    fill: var(--blue)
}

.return__header {
    padding-top: 30px;
    padding-bottom: 30px;
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-pack: justify;
    -ms-flex-pack: justify;
    justify-content: space-between
}

.return__form {
    -webkit-box-flex: 1;
    -ms-flex-positive: 1;
    flex-grow: 1;
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-align: center;
    -ms-flex-align: center;
    align-items: center
}

.return__search {
    width: 100%;
    position: relative;
    margin-right: 95px
}

.return__search-icon {
    fill: none;
    stroke: var(--purple);
    width: 18px;
    height: 18px;
    position: absolute;
    top: 50%;
    left: 21px;
    -webkit-transform: translateY(-50%);
    -ms-transform: translateY(-50%);
    transform: translateY(-50%)
}

.return__search-input {
    width: 100%;
    padding: 12px 55px;
    border-radius: 6px;
    border: none;
    background: var(--return-input-bg);
    color: var(--purple)
}

.return__search-input:focus {
    outline: 1px solid var(--purple)
}

.return__search-input::-webkit-input-placeholder {
    font-family: var(--f400-lato);
    font-weight: 400;
    font-size: 14px;
    line-height: 21px;
    color: var(--purple)
}

.return__search-input::-moz-placeholder {
    font-family: var(--f400-lato);
    font-weight: 400;
    font-size: 14px;
    line-height: 21px;
    color: var(--purple)
}

.return__search-input:-ms-input-placeholder {
    font-family: var(--f400-lato);
    font-weight: 400;
    font-size: 14px;
    line-height: 21px;
    color: var(--purple)
}

.return__search-input::-ms-input-placeholder {
    font-family: var(--f400-lato);
    font-weight: 400;
    font-size: 14px;
    line-height: 21px;
    color: var(--purple)
}

.return__search-input::placeholder {
    font-family: var(--f400-lato);
    font-weight: 400;
    font-size: 14px;
    line-height: 21px;
    color: var(--purple)
}

.return__notification {
    position: relative;
    margin-right: 47px
}

.return__notification-icon {
    width: 18px;
    height: 20px;
    fill: none;
    stroke: var(--purple)
}

.return__notification-count {
    position: absolute;
    top: -50%;
    right: -75%;
    width: 20px;
    height: 20px;
    border-radius: 50%;
    background: var(--red);
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-align: center;
    -ms-flex-align: center;
    align-items: center;
    -webkit-box-pack: center;
    -ms-flex-pack: center;
    justify-content: center;
    font-size: 12px;
    font-family: var(--f600-lato);
    font-weight: 600;
    color: var(--white)
}

.return__auth {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-align: center;
    -ms-flex-align: center;
    align-items: center
}

.user__avatar {
    width: 45px;
    height: 45px;
    border-radius: 50%;
    overflow: hidden;
    margin-right: 14px
}

.user__img {
    width: 100%;
    height: 100%;
    -o-object-fit: cover;
    object-fit: cover;
    -o-object-position: center;
    object-position: center
}

.user__name {
    font-family: var(--f400-lato);
    font-weight: 400;
    font-size: 14px;
    line-height: 21px;
    color: var(--blue)
}

.user__second-name {
    color: var(--purple)
}

.title__lvl2 {
    font-family: var(--f700-lato);
    font-weight: 700;
    font-size: 18px;
    line-height: 36px;
    color: var(--blue)
}

.exchanges__payment-checkbox {
    position: relative
}

.exchanges__payment-input {
    display: none
}

.exchanges__payment-input:disabled+.exchanges__check {
    border: 2px solid var(--return-input-bg)
}

.exchanges__payment-input:checked+.exchanges__check {
    background: var(--blue);
    border: 2px solid var(--blue)
}

.exchanges__payment-input:checked:disabled+.exchanges__check {
    background: var(--return-input-bg);
    border: 2px solid var(--return-input-bg)
}

.exchanges__payment-input:checked+.exchanges__check .exchanges__check-icon {
    opacity: 1
}

.exchanges__payment .exchanges__label {
    position: relative;
    display: inline-block;
    cursor: pointer;
    padding-left: 40px;
    margin-right: 15px
}

.exchanges__check {
    width: 25px;
    height: 25px;
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-pack: center;
    -ms-flex-pack: center;
    justify-content: center;
    background: var(--white);
    -webkit-box-align: center;
    -ms-flex-align: center;
    align-items: center;
    border-radius: 6px;
    border: 2px solid var(--blue);
    position: absolute;
    top: 50%;
    left: 0;
    -webkit-transform: translate(0, -50%);
    -ms-transform: translate(0, -50%);
    transform: translate(0, -50%)
}

.exchanges__check-icon {
    opacity: 0;
    fill: var(--white);
    width: 15px;
    height: 10px
}

.exchanges__top-panel {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-pack: justify;
    -ms-flex-pack: justify;
    justify-content: space-between;
    margin-bottom: 30px
}

.exchanges__title {
    font-family: var(--f700-lato);
    font-weight: 700;
    font-size: 26px;
    line-height: 36px;
    color: var(--blue)
}

.exchanges__upgrade {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-align: center;
    -ms-flex-align: center;
    align-items: center;
    -webkit-transform: translateY(5px);
    -ms-transform: translateY(5px);
    transform: translateY(5px)
}

.checkbox-upgrade {
    display: inline-block;
    font-family: var(--f600-lato);
    font-weight: 600;
    height: 30px;
    line-height: 21px;
    margin-right: 10px;
    position: relative;
    vertical-align: middle;
    font-size: 14px;
    -webkit-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none
}

.checkbox-upgrade .checkbox-upgrade-switch {
    display: inline-block;
    height: 30px;
    width: 96px;
    -webkit-box-sizing: border-box;
    box-sizing: border-box;
    position: relative;
    border-radius: 2px;
    background: var(--return-input-bg);
    -webkit-transition: background-color 0.3s cubic-bezier(0, 1, 0.5, 1);
    -o-transition: background-color 0.3s cubic-bezier(0, 1, 0.5, 1);
    transition: background-color 0.3s cubic-bezier(0, 1, 0.5, 1);
    border-radius: 15px
}

.checkbox-upgrade .checkbox-upgrade-switch::after {
    content: attr(data-label-off);
    display: inline-block;
    -webkit-box-sizing: border-box;
    box-sizing: border-box;
    width: 48px;
    padding: 4px 10px;
    position: absolute;
    top: 0;
    left: 48px;
    text-transform: uppercase;
    text-align: center;
    color: var(--purple);
    font-size: 14px;
    line-height: 21px;
    border-radius: 15px
}

.checkbox-upgrade .checkbox-upgrade-switch:before {
    content: attr(data-label-on);
    display: inline-block;
    -webkit-box-sizing: border-box;
    box-sizing: border-box;
    width: 48px;
    position: absolute;
    top: 1px;
    left: 1px;
    z-index: 5;
    text-transform: uppercase;
    text-align: center;
    background: var(--blue);
    line-height: 21px;
    font-size: 14px;
    color: var(--white);
    -webkit-transition: -webkit-transform 0.3s cubic-bezier(0, 1, 0.5, 1);
    transition: -webkit-transform 0.3s cubic-bezier(0, 1, 0.5, 1);
    -o-transition: transform 0.3s cubic-bezier(0, 1, 0.5, 1);
    transition: transform 0.3s cubic-bezier(0, 1, 0.5, 1);
    transition: transform 0.3s cubic-bezier(0, 1, 0.5, 1), -webkit-transform 0.3s cubic-bezier(0, 1, 0.5, 1);
    border-radius: 15px;
    padding: 4px 10px
}

.checkbox-upgrade input[type="checkbox"] {
    display: block;
    width: 0;
    height: 0;
    position: absolute;
    z-index: -1;
    opacity: 0
}

.checkbox-upgrade input[type="checkbox"]:checked+.checkbox-upgrade-switch {
    background-color: var(--return-input-bg)
}

.checkbox-upgrade input[type="checkbox"]:checked+.checkbox-upgrade-switch:after {
    content: attr(data-label-on);
    left: 0
}

.checkbox-upgrade input[type="checkbox"]:checked+.checkbox-upgrade-switch:before {
    content: attr(data-label-off);
    color: var(--white);
    -webkit-transform: translate3d(48px, 0, 0);
    transform: translate3d(48px, 0, 0);
    background: var(--purple)
}

.checkbox-upgrade input[type="checkbox"]:not(:disabled)+.checkbox-upgrade-switch:hover {
    cursor: pointer
}

.checkbox-upgrade input[type="checkbox"]:not(:disabled)+.checkbox-upgrade-switch:hover::before {
    -webkit-box-shadow: 0 3px 3px rgba(0, 0, 0, 0.4);
    box-shadow: 0 3px 3px rgba(0, 0, 0, 0.4)
}

.exchanges__wrapper {
    padding: 26px 30px 30px;
    background: var(--white);
    border-radius: var(--border-radius-big);
    margin-bottom: 30px
}

.exchanges__wrapper:last-child {
    margin-bottom: 0
}

.exchanges__wrapper-title {
    line-height: 24px;
    margin-bottom: 25px
}

.exchanges__options-item:not(:last-child),
.exchanges__speed-item:not(:last-child) {
    margin-bottom: 15px
}

.exchanges__radio:checked+.exchanges__label .exchanges__input-circle {
    border: 2px solid var(--light-blue)
}

.exchanges__radio:checked+.exchanges__label .exchanges__input-circle:after {
    background: var(--light-blue)
}

.exchanges__radio:checked:disabled+.exchanges__label .exchanges__input-circle {
    border: 2px solid var(--return-input-bg)
}

.exchanges__radio:disabled+.exchanges__label .exchanges__input-circle {
    border: 2px solid var(--return-input-bg)
}

.exchanges__radio:checked:disabled+.exchanges__label .exchanges__input-circle:after {
    background: var(--return-input-bg)
}

.exchanges__label {
    font-family: var(--f400-lato);
    font-weight: 400;
    color: var(--blue);
    font-size: 16px;
    line-height: 24px;
    -webkit-box-align: center;
    -ms-flex-align: center;
    align-items: center;
    cursor: pointer;
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    align-items: center
}

.exhanges__options-comment {
    margin-left: 3px;
    color: var(--purple)
}

.exchanges__input {
    display: none
}

.exchanges__input-circle {
    display: inline-block;
    width: 26px;
    height: 26px;
    border-radius: 50%;
    border: 2px solid var(--light-blue);
    position: relative;
    margin-right: 15px
}

.exchanges__input-circle:after {
    content: '';
    width: 13px;
    height: 13px;
    border-radius: 50%;
    position: absolute;
    top: 50%;
    left: 50%;
    -webkit-transform: translate(-50%, -50%);
    -ms-transform: translate(-50%, -50%);
    transform: translate(-50%, -50%);
    background: transparent
}

.exchanges__payment-price {
    min-width: 95px;
    text-align: center;
    display: inline-block;
    padding: 7px 0;
    font-family: var(--f400-lato);
    font-weight: 400;
    font-size: 14px;
    line-height: 21px;
    color: var(--purple);
    background: var(--main-input-bg);
    border-radius: var(--border-radius-small)
}

.exchanges__speed-secondary {
    position: relative;
    display: none;
    cursor: pointer;
    padding-left: 40px;
    margin-top: 10px
}

.exchanges__speed-item.visible .exchanges__speed-secondary {
    display: block
}

.exchanges__speed-input {
    display: none
}

.exchanges__speed-input:checked+.exchanges__speed-check {
    border: 2px solid var(--purple)
}

.exchanges__speed-input:checked:disabled+.exchanges__speed-check {
    border: 2px solid var(--return-input-bg)
}

.exchanges__speed-input+.exchanges__speed-check {
    top: 50%;
    left: 40px;
    -webkit-transform: translate(0, -50%);
    -ms-transform: translate(0, -50%);
    transform: translate(0, -50%)
}

.exchanges__speed-input:disabled+.exchanges__speed-check {
    border: 2px solid var(--return-input-bg)
}

.exchanges__speed-input:checked+.exchanges__speed-check .exchanges__speed-icon {
    opacity: 1;
    fill: var(--purple)
}

.exchanges__speed-input:checked:disabled+.exchanges__speed-check .exchanges__speed-icon {
    opacity: 1;
    fill: var(--return-input-bg)
}

.exchanges__speed-check {
    width: 20px;
    height: 20px;
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-pack: center;
    -ms-flex-pack: center;
    justify-content: center;
    background: var(--white);
    -webkit-box-align: center;
    -ms-flex-align: center;
    align-items: center;
    border-radius: 6px;
    border: 2px solid var(--purple);
    position: absolute;
    top: 50%;
    left: 0;
    -webkit-transform: translate(0, -50%);
    -ms-transform: translate(0, -50%);
    transform: translate(0, -50%)
}

.exchanges__speed-icon {
    opacity: 0;
    fill: var(--white);
    width: 12px;
    height: 8px
}

.exchanges__speed-label {
    color: var(--purple);
    position: relative;
    display: inline-block;
    cursor: pointer;
    padding-left: 30px
}

@media (max-width: 1300px) {
    .return__content {
        padding-left: 95px;
        padding-right: 30px
    }

    .return__footer {
        padding-bottom: 60px
    }
}

@media (max-width: 1200px) {
    .return__item:not(:last-child) {
        margin-right: 12px
    }

    .return__item:last-child {
        margin-right: 12px
    }
}

@media (max-width: 1100px) {
    .side-bar {
        position: fixed;
        width: 65px;
        z-index: 10;
        padding: 30px 15px;
        -webkit-box-shadow: var(--btn-shadow2);
        box-shadow: var(--btn-shadow2)
    }

    .side-bar__btn {
        display: -webkit-box;
        display: -ms-flexbox;
        display: flex
    }

    .side-bar.active .side-bar__btn {
        background: transparent;
        -webkit-transform: rotate(180deg);
        -ms-transform: rotate(180deg);
        transform: rotate(180deg);
        -webkit-box-pack: start;
        -ms-flex-pack: start;
        justify-content: flex-start;
        padding-left: 10px
    }

    .side-bar.active {
        position: fixed;
        width: 275px;
        padding: 30px 40px 40px 30px;
        -webkit-box-shadow: var(--btn-shadow2);
        box-shadow: var(--btn-shadow2)
    }

    .side-bar__center {
        padding-top: 35px
    }

    .side-bar__link-text {
        width: 0;
        height: 0;
        overflow: hidden
    }

    .side-bar.active .side-bar__link-text {
        -webkit-box-flex: 1;
        -ms-flex-positive: 1;
        flex-grow: 1;
        height: 100%
    }

    .side-bar__count {
        width: 0;
        height: 0
    }

    .side-bar.active .side-bar__count {
        width: 24px;
        height: 24px
    }

    .side-bar__count::after {
        display: inline-block
    }

    .side-bar.active .side-bar__count::after {
        display: none
    }

    .side-bar__logo-img {
        display: none
    }

    .side-bar.active .side-bar__logo-img {
        display: inline-block
    }

    .side-bar__img {
        display: inline-block;
        width: 29px;
        height: 45px;
        -o-object-fit: contain;
        object-fit: contain
    }

    .side-bar.active .side-bar__img {
        display: none
    }

    .side-bar__dropdown {
        display: none
    }

    .side-bar.active .side-bar__dropdown {
        display: block
    }

    .side-bar__link {
        width: 100%;
        -webkit-box-pack: center;
        -ms-flex-pack: center;
        justify-content: center
    }

    .side-bar.active .side-bar__link {
        -webkit-box-pack: start;
        -ms-flex-pack: start;
        justify-content: flex-start
    }

    .side-bar__icon {
        margin-right: 0
    }

    .side-bar.active .side-bar__icon {
        margin-right: 20px
    }

    .side-bar__settings {
        -webkit-box-pack: center;
        -ms-flex-pack: center;
        justify-content: center
    }

    .side-bar.active .side-bar__settings {
        -webkit-box-pack: start;
        -ms-flex-pack: start;
        justify-content: flex-start
    }

    .side-bar__help-icon {
        margin-right: 0
    }

    .side-bar.active .side-bar__help-icon {
        margin-right: 20px
    }

    .side-bar__item:hover::before,
    .side-bar__settings:hover::before,
    .side-bar__help:hover::before {
        opacity: 1
    }

    .side-bar.active .side-bar__item::before,
    .side-bar.active .side-bar__settings::before,
    .side-bar.active .side-bar__help::before {
        opacity: 0
    }

    .side-bar.active+.over__box {
        width: 100vw;
        height: 100vh;
        position: fixed;
        top: 0;
        left: 0;
        z-index: 8;
        background: var(--dark-purple-opacity)
    }

    .return__pages {
        -webkit-box-pack: center;
        -ms-flex-pack: center;
        justify-content: center
    }
}

@media (max-width: 820px) {
    .return__content {
        padding-left: 15px;
        padding-right: 15px
    }

    .reason__main {
        padding: 40px 20px 30px 20px
    }

    .communications__inner {
        grid-template-columns: 1fr 1fr;
        grid-gap: 30px
    }

    .communications__templates {
        grid-row: 1 / span 1;
        grid-column: 1 / span 2
    }

    .communications__templates:nth-child(3) {
        grid-row: 2 / span 1;
        grid-column: 1 / span 2
    }

    .msg__text {
        grid-row: 3 / span 1;
        grid-column: 1 / span 1
    }

    .msg__mail {
        grid-row: 3 / span 1;
        grid-column: 2 / span 1
    }
}

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */